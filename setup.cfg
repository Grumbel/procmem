[metadata]
name = procmem
version = 0.1.0
description = "A process memory inspection tool"
long_description = file: README.md
license = GPLv3+
author="Ingo Ruhnke"
author_email="grumbel@gmail.com"
url="https://github.com/Grumbel/procmem"

[options]
packages = find:
include_package_data = True
install_requires =
  bytefmt
  psutil

[options.entry_points]
console_scripts =
  procmem = procmem.cmd_procmem:main_entrypoint

[flake8]
max-line-length = 120

[mypy]
strict = True
check_untyped_defs = True
disallow_untyped_defs = True
warn_return_any = True
warn_unreachable = True
warn_unused_configs = True
ignore_missing_imports = True

# must be False, see https://github.com/python/mypy/issues/10757
disallow_untyped_calls = False

# triggered by QObject
disallow_subclassing_any = False

# Can't use this due to mypy/pyright having different ideas about cast()
warn_redundant_casts = False

[mypy-tests.*]
ignore_missing_imports = False

[pylint]
disable =
  broad-except,
  consider-using-f-string,
  consider-using-in,
  duplicate-code,
  fixme,
  import-outside-toplevel,
  invalid-name,
  logging-format-interpolation,
  logging-fstring-interpolation,
  missing-class-docstring,
  missing-function-docstring,
  missing-module-docstring,
  no-else-return,
  no-self-use,
  protected-access,
  superfluous-parens,
  too-few-public-methods,
  too-many-arguments,
  too-many-branches,
  too-many-instance-attributes,
  too-many-locals,
  too-many-public-methods,
  too-many-return-statements,
  too-many-statements,
  unnecessary-lambda,
  unspecified-encoding,
  unused-argument,
  unused-variable,
  using-constant-test,
  too-many-nested-blocks,
  use-implicit-booleaness-not-comparison,
  consider-using-from-import,
  useless-super-delegation,
  consider-iterating-dictionary,

[pylint.FORMAT]
max-line-length = 120

# EOF #
